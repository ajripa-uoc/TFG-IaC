name: Terraform EKS Deploy

on:
  push:
    paths:
      - 'eks/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    plan:
      name: Terraform plan
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js 20.x
          uses: actions/setup-node@v1
          with:
            node-version: 20.x
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
        - name: Initialise project and view terraform plan
          run: |
            cd eks
            terraform fmt
            terraform init
            terraform plan -var="aws_admin_arn=${{ secrets.AWS_ADMIN_ARN }}" \
              -var="github_app_clientid=${{ secrets.GITHUBAPP_CLIENTID }}" \
              -var="github_app_secret=${{ secrets.GITHUBAPP_SECRET }}" \
              -var="github_app_installation_id=${{ secrets.GITHUBAPP_INSTALLATION_ID }}" \
              -var="github_app_id=${{ secrets.GITHUBAPP_ID }}" \
              -var="github_app_private_key=${{ secrets.GITHUBAPP_PRIVATE_KEY }}"
    apply:
      name: Terraform apply
      needs: plan
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js 20.x
          uses: actions/setup-node@v1
          with:
            node-version: 20.x
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-2
        - name: Initialise project and deploy infraestructure
          run: |
            cd eks
            terraform fmt
            terraform init
            terraform apply -var="aws_admin_arn=${{ secrets.AWS_ADMIN_ARN }}" \
              -var="github_app_clientid=${{ secrets.GITHUBAPP_CLIENTID }}" \
              -var="github_app_secret=${{ secrets.GITHUBAPP_SECRET }}" \
              -var="github_app_installation_id=${{ secrets.GITHUBAPP_INSTALLATION_ID }}" \
              -var="github_app_id=${{ secrets.GITHUBAPP_ID }}" \
              -var="github_app_private_key=${{ secrets.GITHUBAPP_PRIVATE_KEY }}" \
              --auto-approve=true
